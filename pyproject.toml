[project]
name = "{{ project_name }}"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "dj-database-url>=2.1.0",
    "django>=5.0",
    "django-extensions>=3.0",
    "django-storages>=1.14",
    "django-debug-toolbar>=4.2",
    "environs[django]>=10.0",
    "psycopg[binary]>=3.1",
    "django-ninja>=1.0",
    "whitenoise>=6.6",
    "gunicorn>=21.2.0",
    "supervisor>=4.2.5",
    "setuptools>=69.0.3",
    "Werkzeug>=3.0.0",
    "sentry-sdk[django]>=2.19.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4",
    "pytest-django>=4.7",
]

[tool.black]
target-version = ["py312"]

[tool.coverage.run]
omit = [
    "*/admin.py",
    "*/manage.py",
    "*/migrations/*",
    "*/tests/*",
    "conftest.py",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
addopts = "--cov --nomigrations --reuse-db"
norecursedirs = ".git* frontend media static templates"
python_files = "test_*.py"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".github",
    ".hg",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "migrations",
    "node_modules",
    "static",
]
# Same as Black.
line-length = 120
# Assume Python 3.12.
target-version = "py312"

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
ignore = ["E501", "E741"]                # temporary
per-file-ignores = {}
# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
unfixable = []
